---
layout: guide
title: Creating Deployable Archives with ShrinkWrap
guide_group: 1
guide_order: 40
---
-# TODO:

#content
  :textile
    <div class="header">
    h2. Creating Deployable Archives with ShrinkWrap

    ShrinkWrap is the simplest way to create archives in Java, and it powers
    the Arquillian deployment mechanism.  This guide serves as a crash course in
    creating the objects which will come to represent your deployments.  We'll cover:

    * The motivation behind and benefits of ShrinkWrap over traditional file-based archives
    * Creation of a new archive from scratch
    * Various mechanisms used to add content 
    * Importing archives from existing structures like Files or Maven Coordinates

    </div>

    h3(#justification). Justification

    Justification for ShrinkWrap.

    p(info). %Note%

    

    div(filename). pom.xml

    bc(prettify).. <project xmlns="http://maven.apache.org/POM/4.0.0"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xsi:schemaLocation="
            http://maven.apache.org/POM/4.0.0
            http://maven.apache.org/xsd/maven-4.0.0.xsd">
       <!-- Code stuff -->
    </project>

    ip. IP

    h3(#archive_creation). Archive Creation

    Making archives.

    h3(#adding_content). Adding Content

    Adding content.

    h3(#adding_import). Importing from Existing Content

    From File or Maven or whatev

#sidebar
  %h3.chapter_header Chapters
  %ol.chapters
    %li
      %a{ :href=>'#justification' } Justification
    %li
      %a{ :href=>'#archive_creation' } Archive Creation
    %li
      %a{ :href=>'#adding_content' } Adding Content
    %li
      %a{ :href=>'#archive_import' } Importing from Existing Content
